---
title: "Split Order"
format:
  html:
    embed-resources: true
execute:
  echo: false
---

```{r}
split.order.dev <- function(x, labs, digits, varlen) {
  l <- x$frame$var
  l[l != "<leaf>"] <- as.character(seq_len(sum(l != "<leaf>")))
  l <- ifelse(l == "<leaf>", "leaf", paste0("split #", l))
  paste(l, "\ndev: ", x$frame$dev)
}

# create colors for use in rpart.plot
# order must match order of mod$frame
#
vector_colors <- function(x,
                          color_low = "#FF896A",
                          color_high = "#deebf7",
                          default_color = "gray90") {
  stopifnot(is.numeric(x))

  is_valid <- is.finite(x)
  valid_x <- x[is_valid]

  # Initialize all as default
  colors <- rep(default_color, length(x))

  # Return default if no variation or valid input
  if (length(valid_x) == 0 || diff(range(valid_x)) == 0) {
    return(colors)
  }

  # Normalize to [0, 1]
  x_norm <- (valid_x - min(valid_x)) / diff(range(valid_x))

  # Create gradient function
  ramp <- grDevices::colorRamp(c(color_low, color_high), space = "Lab")
  rgb_mat <- ramp(x_norm)
  hex_colors <- grDevices::rgb(rgb_mat[,1], rgb_mat[,2], rgb_mat[,3], maxColorValue = 255)

  colors[is_valid] <- hex_colors
  return(colors)
}
```

## The Data

```{r}
library(rpart)
library(rpart.plot)
head(kyphosis)
```


::: {.pt7}

From **rpart** package

`Kyphosis` -- type of deformation `absent` or `present` after surgery

`Age` -- in months

`Number` -- the number of vertebrae involved

`Start` -- the number of the first (topmost) vertebra operated on

:::



## Growing the tree

Following the CART algorithm, trees are grown large and then pruned back. To grow a large tree, we set the complexity parameter (`cp`) to zero, and also set `minbucket` to two so that there will be no limitations on growing the tree. 

```{r}
#| echo: true
kmod <- rpart(Kyphosis ~ Age + Number + Start, data = kyphosis, cp = 0, 
              minsplit = 2)
```


```{r}
#| label: fig-split-order
#| fig-cap: "Colors based on class probabilities"
colors <- vector_colors(1:nrow(kmod$frame), "white", "#B6BCF1")

colors[kmod$frame$var == "<leaf>"] <- "#00A86B50"

prp(kmod, extra = 1, type = 2, node.fun = split.order.dev, 
    nn = TRUE, box.col = colors)

mtext("Fully Grown Tree", side = 3, line = 3, font = 2, cex = 1.2)
```


```{r}
splitorder <- as.numeric(rownames(kmod$frame)[kmod$frame$var != "<leaf>"])
```


Split order by node: `r splitorder`